package com.spring.mvc.board;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.spring.mvc.board.commons.PageVO;
import com.spring.mvc.board.repository.IBoardMapper;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"file:src/main/webapp/WEB-INF/spring/mvc-config.xml"})
public class PageAlgorithmTest {
	
	/*
	 *** 페이징 알고리즘 만들기 ***
	 # 1. 총 게시물의 수 조회
	 - 총 게시물 수는 DB로부터 수를 조회하는 SQL문 작성.
	 
	 # 2. 사용자가 현재 위치한 페이지를 기준으로
	  끝 페이지 번호를 계산하는 로직 작성.
	  공식: Math.ceil(현재 위치한 페이지 번호 / 페이지 버튼 개수) * 페이지 버튼 개수
	 */
	
	@Autowired
	private IBoardMapper mapper;

	@Test
	public void pagingAlgorithmTest() {
		//총 게시물 구하는 테스트
		System.out.println("-----------------------");
		System.out.println("# 총 게시물 수: " + mapper.countArticles());
		System.out.println("-----------------------");
	}
	
	//끝 페이지 번호 계산 테스트
	PageVO vo = new PageVO();
	
	
}
