package com.spring.mvc.user.controller;

import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.spring.mvc.user.model.UserVO;
import com.spring.mvc.user.service.IUserService;

@RestController
@RequestMapping("/user")
public class UserController {

	@Autowired
	private IUserService service;
	
	@PostMapping("/checkId")
	public String checkId(@RequestBody String account) {
		System.out.println("/user/checkId: POST");
		System.out.println("param: " + account);
		
		int checkNum = service.checkId(account);
		
		if(checkNum == 1) {
			System.out.println("아이디가 중복 되었습니다.");
			return "duplicated";
		} else { 
			System.out.println("아아디가 중복되지 않았습니다.");
			return "available";
		}
		
	}
	
	//회원 가입 요청 처리
	@PostMapping("/")
	public String register(@RequestBody UserVO vo) {
		System.out.println("/user/: POST");
		service.register(vo);
		return "joinSuccess";
	}
	
	//로그인 처리
	@PostMapping("/loginCheck")
	public String loginCheck(@RequestBody UserVO login,
							 /* HttpServletRequest request */
							 HttpSession session, HttpServletResponse response) {
		System.out.println("/uesr/loginCheck: POST");
//		if(service.checkId(login.getAccount()) == 0) {
//			return "idFail";
//		} else {
			
			// 서버에서 세션 객체를 얻는 방법
			// 1.HttpServletRequest 객체 사용.
//			HttpSession session = request.getSession();
			
			BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();
			UserVO user = service.selectOne(login.getAccount());
			
			if(user != null) {
				
			}
			
//			if(!login.getPassword().equals(user.getPassword())) {
//				return "pwFail";
//			} else {
//				session.setAttribute("login", user);
//				return "loginSuccess";
//			}
//		}
	}
	
	//로그아웃
	@GetMapping("/logout")
	public ModelAndView logout(HttpSession session, RedirectAttributes ra) {
		System.out.println("/user/logout: GET");
		
		if(session.getAttribute("login") != null) {
			session.removeAttribute("login");
			ra.addFlashAttribute("msg", "logout");
		}
		
//		ModelAndView mv = new ModelAndView();
//		mv.addObject("name", "value");
//		mv.setViewName("redirect:/");
		
		return new ModelAndView("redirect:/");
	}
	
}
